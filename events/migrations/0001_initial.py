# Generated by Django 3.1.1 on 2021-06-30 13:20

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtailmetadata.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0022_uploadedimage'),
        ('wagtailcore', '0052_pagelogentry'),
        ('blog', '0016_auto_20210505_1419'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventListingPage',
            fields=[
                ('bloglistingpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blog.bloglistingpage')),
            ],
            options={
                'abstract': False,
            },
            bases=('blog.bloglistingpage',),
        ),
        migrations.CreateModel(
            name='EventPostPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('post_title', models.CharField(blank=True, max_length=512, null=True)),
                ('event_type', models.CharField(choices=[('Webinar', 'Webinar'), ('Presentation', 'Presentation'), ('Meeting', 'Meeting'), ('Conference', 'Conference'), ('Other', 'Other')], default='Webinar', max_length=32)),
                ('featured', models.BooleanField(default=False, null=True)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('post_subtitle', models.CharField(blank=True, max_length=512, null=True)),
                ('body', wagtail.fields.StreamField([('html', wagtail.blocks.RawHTMLBlock()), ('paragraph', wagtail.blocks.RichTextBlock(features=['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'bold', 'italic', 'link', 'ol', 'ul', 'hr'])), ('post_image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(help_text='Add an Image', label='Image', required=True)), ('caption', wagtail.blocks.CharBlock(help_text='Provide a caption for the image', label='Caption', required=True))]))], blank=True, null=True)),
                ('main_image', models.ForeignKey(blank=True, help_text='Image', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtailmetadata.models.WagtailImageMetadataMixin, 'wagtailcore.page', models.Model),
        ),
    ]
